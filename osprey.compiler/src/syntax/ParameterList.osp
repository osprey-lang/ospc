use aves;

namespace osprey.compiler.syntax;

/// Summary: Implements an immutable list of {Parameter} declarations, which represent
///          parameters of a function member (such as a method, indexer or constructor).
///          This collection is more specialised than {NodeList}, containing members
///          that simplify the manipulation of parameter lists.
public inheritable ParameterList is NodeList
{
	public new()
	{
		new this([], 0, 0, false);
	}
	public new(items)
	{
		new base(items);
	}
	public new(items, optionalParameterCount, refParameterCount, hasVariadicParameter)
	{
		new base(items);

		_optionalParameterCount = optionalParameterCount;
		_refParameterCount      = refParameterCount;
		_hasVariadicParameter   = hasVariadicParameter;
	}

	private _optionalParameterCount;
	/// Summary: Gets the total number of optional parameters in this parameter list.
	public get optionalParameterCount
	{
		if _optionalParameterCount is null {
			_optionalParameterCount = count(@.isOptional);
		}
		return _optionalParameterCount;
	}

	/// Summary: Determines whether the parameter list has any optional parameters.
	public get hasOptionalParameters => optionalParameterCount > 0;

	private _hasVariadicParameter;
	/// Summary: Determines whether the parameter list has a variadic parameter.
	/// Remarks: Variadic parameters can only appear at the end of the parameter list.
	public get hasVariadicParameter
	{
		if _hasVariadicParameter is null {
			_hasVariadicParameter = any(@.isVariadic);
		}
		return _hasVariadicParameter;
	}

	private _refParameterCount;
	/// Summary: Gets the total number of ref parameters in this parameter list.
	public get refParameterCount
	{
		if _refParameterCount is null {
			_refParameterCount = count(@.isRef);
		}
		return _refParameterCount;
	}

	/// Summary: Determines whether the parameter list has any ref parameters.
	public get hasRefParameters => refParameterCount > 0;
}
