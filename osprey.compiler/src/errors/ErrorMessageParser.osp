use aves.*;
use osprey.compiler.parser.{
	ParserBase,
	ParseFlags,
	TokenType
};

namespace osprey.compiler;

/// Summary: Parses the resource file containing error messages. This file uses Osprey tokens
///          according to a simple grammar; see {parseMessages} for details.
internal class ErrorMessageParser is ParserBase
{
	internal new(source)
	{
		new base(source, ParseFlags.none, null);
	}

	internal parseMessages()
	{
		// The error message file uses Osprey tokens, according to the following
		// grammar:
		//   message-file:
		//     messages
		//   messages:
		//     message
		//     messages  message
		//   message:
		//     integer-literal  ':'  identifier  '='  string-literal  ';'
		// With the additional restriction that the integer literal must be of
		// type aves.Int. Unsigned integers are not allowed.
		// The identifier in the message definition is used to generate a list
		// of error codes.
		var messages = new Hash(100);

		var i = 0;
		while not accept(i, TokenType.eof) {
			var code = expectr(ref i, TokenType.int).literalValue;
			expectr(ref i, TokenType.identifier);

			expectr(ref i, TokenType.assign);

			var message = expectr(ref i, TokenType.string).literalValue;

			expectr(ref i, TokenType.semicolon);
			messages.add(code, message);
		}

		return messages;
	}
}
